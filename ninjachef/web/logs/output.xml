<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.2.1 (Python 3.8.3 on win32)" generated="20200729 21:47:15.748" rpa="false">
<suite id="s1" name="Receber-Pedidos" source="C:\Roboweek\ninjachef\web\tests\receber-pedidos.robot">
<test id="s1-t1" name="Receber Novo Pedido">
<kw name="Open Session" library="base" type="setup">
<kw name="Open Browser" library="SeleniumLibrary">
<doc>Opens a new browser instance to the optional ``url``.</doc>
<arguments>
<arg>about:blank</arg>
<arg>chrome</arg>
</arguments>
<msg timestamp="20200729 21:47:16.333" level="INFO">Opening browser 'chrome' to base url 'about:blank'.</msg>
<status status="PASS" starttime="20200729 21:47:16.333" endtime="20200729 21:47:19.845"></status>
</kw>
<status status="PASS" starttime="20200729 21:47:16.332" endtime="20200729 21:47:19.846"></status>
</kw>
<kw name="Dado que &quot;eduguedes@gmail.com&quot; é a minha conta de cozinheiro" library="kws">
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${email_cozinheiro}</arg>
</arguments>
<msg timestamp="20200729 21:47:19.849" level="INFO">${email_cozinheiro} = eduguedes@gmail.com</msg>
<status status="PASS" starttime="20200729 21:47:19.848" endtime="20200729 21:47:19.849"></status>
</kw>
<kw name="Get Api login" library="helpers">
<arguments>
<arg>${email_cozinheiro}</arg>
</arguments>
<assign>
<var>${token_cozinheiro}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>&amp;{headers}</var>
</assign>
<msg timestamp="20200729 21:47:19.850" level="INFO">&amp;{headers} = { Content-Type=application/json }</msg>
<status status="PASS" starttime="20200729 21:47:19.850" endtime="20200729 21:47:19.850"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>email=${email_param}</arg>
</arguments>
<assign>
<var>&amp;{payload}</var>
</assign>
<msg timestamp="20200729 21:47:19.851" level="INFO">&amp;{payload} = { email=eduguedes@gmail.com }</msg>
<status status="PASS" starttime="20200729 21:47:19.851" endtime="20200729 21:47:19.851"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>api</arg>
<arg>${api_url}</arg>
</arguments>
<msg timestamp="20200729 21:47:19.852" level="INFO">Creating Session using : alias=api, url=http://ninjachef-api-qaninja-io.umbler.net, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200729 21:47:19.851" endtime="20200729 21:47:19.852"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>api</arg>
<arg>/sessions</arg>
<arg>data=${payload}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200729 21:47:20.093" level="INFO">POST Request : url=http://ninjachef-api-qaninja-io.umbler.net/sessions 
 path_url=/sessions 
 headers={'User-Agent': 'python-requests/2.24.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '32'} 
 body={"email": "eduguedes@gmail.com"} 
 </msg>
<msg timestamp="20200729 21:47:20.093" level="INFO">POST Response : url=http://ninjachef-api-qaninja-io.umbler.net/sessions 
 status=200, reason=OK 
 body={"_id":"5f1744fc42f1f60016038846","email":"eduguedes@gmail.com","__v":0} 
 </msg>
<msg timestamp="20200729 21:47:20.093" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200729 21:47:19.852" endtime="20200729 21:47:20.093"></status>
</kw>
<kw name="Status Should Be" library="RequestsLibrary">
<doc>Fails if response status code is different than the expected.</doc>
<arguments>
<arg>200</arg>
<arg>${resp}</arg>
</arguments>
<status status="PASS" starttime="20200729 21:47:20.093" endtime="20200729 21:47:20.094"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${resp.json()['_id']}</arg>
</arguments>
<assign>
<var>${token}</var>
</assign>
<msg timestamp="20200729 21:47:20.095" level="INFO">${token} = 5f1744fc42f1f60016038846</msg>
<status status="PASS" starttime="20200729 21:47:20.094" endtime="20200729 21:47:20.095"></status>
</kw>
<msg timestamp="20200729 21:47:20.095" level="INFO">${token_cozinheiro} = 5f1744fc42f1f60016038846</msg>
<status status="PASS" starttime="20200729 21:47:19.849" endtime="20200729 21:47:20.095"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${token_cozinheiro}</arg>
</arguments>
<msg timestamp="20200729 21:47:20.096" level="INFO">${token_cozinheiro} = 5f1744fc42f1f60016038846</msg>
<status status="PASS" starttime="20200729 21:47:20.095" endtime="20200729 21:47:20.096"></status>
</kw>
<status status="PASS" starttime="20200729 21:47:19.847" endtime="20200729 21:47:20.096"></status>
</kw>
<kw name="E &quot;fernando@bol.com.br&quot; é o email do meu cliente" library="kws">
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${email_cliente}</arg>
</arguments>
<msg timestamp="20200729 21:47:20.098" level="INFO">${email_cliente} = fernando@bol.com.br</msg>
<status status="PASS" starttime="20200729 21:47:20.098" endtime="20200729 21:47:20.098"></status>
</kw>
<kw name="Get Api login" library="helpers">
<arguments>
<arg>${email_cliente}</arg>
</arguments>
<assign>
<var>${token_cliente}</var>
</assign>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>&amp;{headers}</var>
</assign>
<msg timestamp="20200729 21:47:20.100" level="INFO">&amp;{headers} = { Content-Type=application/json }</msg>
<status status="PASS" starttime="20200729 21:47:20.099" endtime="20200729 21:47:20.100"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>email=${email_param}</arg>
</arguments>
<assign>
<var>&amp;{payload}</var>
</assign>
<msg timestamp="20200729 21:47:20.100" level="INFO">&amp;{payload} = { email=fernando@bol.com.br }</msg>
<status status="PASS" starttime="20200729 21:47:20.100" endtime="20200729 21:47:20.101"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>api</arg>
<arg>${api_url}</arg>
</arguments>
<msg timestamp="20200729 21:47:20.101" level="INFO">Creating Session using : alias=api, url=http://ninjachef-api-qaninja-io.umbler.net, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200729 21:47:20.101" endtime="20200729 21:47:20.101"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>api</arg>
<arg>/sessions</arg>
<arg>data=${payload}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200729 21:47:20.326" level="INFO">POST Request : url=http://ninjachef-api-qaninja-io.umbler.net/sessions 
 path_url=/sessions 
 headers={'User-Agent': 'python-requests/2.24.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '32'} 
 body={"email": "fernando@bol.com.br"} 
 </msg>
<msg timestamp="20200729 21:47:20.326" level="INFO">POST Response : url=http://ninjachef-api-qaninja-io.umbler.net/sessions 
 status=200, reason=OK 
 body={"_id":"5f1744fc42f1f60016038847","email":"fernando@bol.com.br","__v":0} 
 </msg>
<msg timestamp="20200729 21:47:20.326" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200729 21:47:20.101" endtime="20200729 21:47:20.326"></status>
</kw>
<kw name="Status Should Be" library="RequestsLibrary">
<doc>Fails if response status code is different than the expected.</doc>
<arguments>
<arg>200</arg>
<arg>${resp}</arg>
</arguments>
<status status="PASS" starttime="20200729 21:47:20.326" endtime="20200729 21:47:20.327"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${resp.json()['_id']}</arg>
</arguments>
<assign>
<var>${token}</var>
</assign>
<msg timestamp="20200729 21:47:20.328" level="INFO">${token} = 5f1744fc42f1f60016038847</msg>
<status status="PASS" starttime="20200729 21:47:20.327" endtime="20200729 21:47:20.328"></status>
</kw>
<msg timestamp="20200729 21:47:20.328" level="INFO">${token_cliente} = 5f1744fc42f1f60016038847</msg>
<status status="PASS" starttime="20200729 21:47:20.098" endtime="20200729 21:47:20.328"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${token_cliente}</arg>
</arguments>
<msg timestamp="20200729 21:47:20.329" level="INFO">${token_cliente} = 5f1744fc42f1f60016038847</msg>
<status status="PASS" starttime="20200729 21:47:20.328" endtime="20200729 21:47:20.329"></status>
</kw>
<status status="PASS" starttime="20200729 21:47:20.097" endtime="20200729 21:47:20.330"></status>
</kw>
<kw name="E que &quot;Carne de Jaca Louca&quot; está cadastrado no meu dashboard" library="kws">
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${produto}</arg>
</arguments>
<msg timestamp="20200729 21:47:20.332" level="INFO">${produto} = Carne de Jaca Louca</msg>
<status status="PASS" starttime="20200729 21:47:20.332" endtime="20200729 21:47:20.332"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>name=${produto}</arg>
<arg>plate=Tipo</arg>
<arg>price=20.00</arg>
</arguments>
<assign>
<var>&amp;{payload}</var>
</assign>
<msg timestamp="20200729 21:47:20.333" level="INFO">&amp;{payload} = { name=Carne de Jaca Louca | plate=Tipo | price=20.00 }</msg>
<status status="PASS" starttime="20200729 21:47:20.332" endtime="20200729 21:47:20.333"></status>
</kw>
<kw name="Get Binary File" library="OperatingSystem">
<doc>Returns the contents of a specified file.</doc>
<arguments>
<arg>${EXECDIR}/resources/images/nhoque.jpg</arg>
</arguments>
<assign>
<var>${image_file}</var>
</assign>
<msg timestamp="20200729 21:47:20.334" level="INFO" html="yes">Getting file '&lt;a href="file://C:\Roboweek\ninjachef\web\resources\images\nhoque.jpg"&gt;C:\Roboweek\ninjachef\web\resources\images\nhoque.jpg&lt;/a&gt;'.</msg>
<msg timestamp="20200729 21:47:20.339" level="INFO">${image_file} = \xff\xd8\xff\xe0JFIF\xff\xdb\x84	( %"1!%)+...383-7(-.+


6&amp; %//--/2-----------/2-------------------------------\xff\xc0\xa8,"...</msg>
<status status="PASS" starttime="20200729 21:47:20.334" endtime="20200729 21:47:20.339"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>thumbnail=${image_file}</arg>
</arguments>
<assign>
<var>&amp;{files}</var>
</assign>
<msg timestamp="20200729 21:47:20.344" level="INFO">&amp;{files} = { thumbnail=\xff\xd8\xff\xe0JFIF\xff\xdb\x84	( %"1!%)+...383-7(-.+


6&amp; %//--/2-----------/2-------------------------------\xff\xc0\...</msg>
<status status="PASS" starttime="20200729 21:47:20.339" endtime="20200729 21:47:20.344"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>user_id=${token_cozinheiro}</arg>
</arguments>
<assign>
<var>&amp;{headers}</var>
</assign>
<msg timestamp="20200729 21:47:20.346" level="INFO">&amp;{headers} = { user_id=5f1744fc42f1f60016038846 }</msg>
<status status="PASS" starttime="20200729 21:47:20.345" endtime="20200729 21:47:20.346"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>api</arg>
<arg>${api_url}</arg>
</arguments>
<msg timestamp="20200729 21:47:20.346" level="INFO">Creating Session using : alias=api, url=http://ninjachef-api-qaninja-io.umbler.net, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200729 21:47:20.346" endtime="20200729 21:47:20.347"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>api</arg>
<arg>/products</arg>
<arg>files=${files}</arg>
<arg>data=${payload}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200729 21:47:20.953" level="INFO">POST Request : url=http://ninjachef-api-qaninja-io.umbler.net/products 
 path_url=/products 
 headers={'User-Agent': 'python-requests/2.24.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'user_id': '5f1744fc42f1f60016038846', 'Content-Length': '13449', 'Content-Type': 'multipart/form-data; boundary=ce3f21f9dd4f6d13f4ef9b5f60ac2581'} 
 body=b'--ce3f21f9dd4f6d13f4ef9b5f60ac2581\r\nContent-Disposition: form-data; name="name"\r\n\r\nCarne de Jaca Louca\r\n--ce3f21f9dd4f6d13f4ef9b5f60ac2581\r\nContent-Disposition: form-data; name="plate"\r\n\r\nTipo\r\n--ce3f21f9dd4f6d13f4ef9b5f60ac2581\r\nContent-Disposition: form-data; name="price"\r\n\r\n20.00\r\n--ce3f21f9dd4f6d13f4ef9b5f60ac2581\r\nContent-Disposition: form-data; name="thumbnail"; filename="thumbnail"\r\n\r\n\xff\xd8\xff\xe0\x00\x10JFIF\x00\x01\x01\x00\x00\x01\x00\x01\x00\x00\xff\xdb\x00\x84\x00\t\x06\x07\x12\x13\x12\x15\x13\x13\x13\x16\x16\x15\x15\x18\x17\x17\x18\x18\x18\x15\x16\x18\x1a\x1a\x17\x17\x17\x16\x17\x17\x18\x18\x16\x1d\x1d( \x18\x1e%\x1b\x15\x17"1!%)+...\x19\x1f383-7(-.+\x01\n\n\n\x0e\r\x0e\x1b\x10\x10\x1b6&amp; %//--/2-----------/2-------------------------------\xff\xc0\x00\x11\x08\x00\xa8\x01,\x03\x01"\x00\x02\x11\x01\x03\x11\x01\xff\xc4\x00\x1c\x00\x00\x02\x02\x03\x01\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x04\x05\x03\x06\x00\x01\x02\x07\x08\xff\xc4\x00&lt;\x10\x00\x02\x01\x03\x03\x02\x05\x02\x04\x04\x04\x05\x05\x01\x00\x00\x01\x02\x11\x00\x03!\x04\x121\x05A\x06\x13"Qa2qB\x81\x91\xa1\x14#\xb1\xc1R\xd1\xe1\xf0\x07\x15b\x82\xf1\x16$3r\x92\xa2\xff\xc4\x00\x1a\x01\x00\x02\x03\x01\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x03\x04\x01\x02\x05\x00\x06\xff\xc4\x00,\x11\x00\x02\x02\x01\x04\x01\x02\x06\x02\x02\x03\x00\x00\x00\x00\x00\x01\x02\x00\x03\x11\x04\x12!1A\x13"2Qaq\x81\xf0#\xb1\x05\x14\x91\xa1\xe1\xff\xda\x00\x0c\x03\x01\x00\x02\x11\x03\x11\x00?\x00\xf6E\xac5\x95\xc95iY\x84\xd7$\xd6\x13Q\x97\xaa3\x85\x192@\xcc\xee\xb9\x8a\xe7}F\xf7\x87\xbd&amp;\xfa\xaf\x02\x14$\x9e\x05p\xc0P\xba\x8d@U,N\x00\x93H\xadx\xb2\xc36\xdfP\xff\x00\xa8\x8c{\xff\x00J\x0f\xae\xe4\xe2\x15hf\x19\x02:\xd4\x1a\x12\xfe\xa8"3{\x02\x7fAHz\xbf\x8ct\xf6\xady\x8c\xd3\x98\n \x99\xfe\xd4\x9c\xf8\xb7O\xa9\xb2\xff\x00Z\x02&gt;\xacJ\xb7\xb0\x1d\xe8\xebq+\xc8\x96\x1aV&amp;V:}\xa6\xeaZ\xab\x9ei\xdb\x9fH&lt;\x189\x1f\xa0\xfd\xea\x0e\xbf\xd6o\x0b\xce\x8a\n\xad\xa8\xb6\x07\x00\x0e\xdf\xef\xe6\x9d\xda\xbc\xdaV;\x16Wh\x0c\xec\xb1;\xa7\x8f\xf4\xae\xd7\xab\xdae#e\xb0\xc5\x86\xe1\xf5\x17\xdb\xc3\x12x\x89\xa0\xbd\x8b\xe6j\xd4\x8c\xbdr%g\xabu$\xb7t(\x1el\xa8\xdc\x08 \x06\x8eT\xfd\xea\x1e\x9b\xacy `68\xc0&lt;A\x9a\xb0\xf5fK\x97T\xaa\xa1\xc6\x16\'o\xbe\x7fz\x87\xce\xb2\x1d\x95\x95T*\x03\x8e\xe7\x8c|\xe2\x82\x19\x0fB2\xdb\xc0\xe6T:\x9e\x8c\xda\xbb\xb6\xe9\x89\x00\x83\x1e\x99?\xda\xad\x9d\x0bSf\xdd\x99\x85\xb9x\x90\xaa\x9d\xe3\x89\x07\xdf"\x98\xf4\xee\x87gVP\xbc\x1bj\xf3-\x86 A)\xcf\xd2\x7f\xa54\xf1\x86\x8f\xa6\xa0\x17-\xdb\x1eg\xb5\x93\x0e#\xf1(\x1d\xc51\x90W\xbc\x18\x99\xb0\x86\xd9*\xd7\xad[\xf5(\x04\xdcA\xb9\xe2I\x07\xb8\x9aM\xd4\xb5\xc4\x82\x18\x19\x81\x92?\xdfj\xb8\xe95v|\x99\xb0O\xa27\x06M\xb7\x19\x8eX\xbc\xe7\xf3\xa1\xd7\xa4\xda\xd5\\t\xb8\xad\xbc\xa0kldd\xfb{\xc1\xa5\xc2{\xf0c\x0bqT\xcc\xa7\xeb4\x0bn\xd26\xe9g\x92P\xf6\x07\x83A\xe9\xf4\xaes\x04\x80@\xc7\xb9\xec=\xe9\x87S\xe8\xfa\xa3}-\xddF\xc8\x01B\x8c\x95\x12\x03\x05\xf9\x89\xab\x97\x875\xb6l*\x8b\xd6\x8a\xdc\xb7\x84\x0c\x08\x9fc\xed4wm\xa3\x99\x0bw\x1cs\x17i\xbc1u\xd978!\x94\xfd#s\xae\xd0\x0f\xa9\x7f1P[\xe9y &lt;\xb0\xfaq\xb4H\xe4\x19\xc8\xa6\xc7\xa9\\\xb7}\xef,\xa3\x1c\xb1\xed\x04\xf1\x1f\x975\xde\xafX\xb7\x83\xe4\x16p\x1aq!\x87o\xb7\xcd,l\xccr\xb0\xff\x00\x89\xce\x8b\xa7\xdfX,q1;\xb0\x0f\xb15r\xe8z\xd2![\x9e*\xb3\xa1\xd3\\6\n!.\xe6\tPy\x00\xf2=\xeaU\xbem\xba\x17\x05D\xe6q\xc7\xbdg\xdb\x9d\xd9\x02\x02\xe1\xeaeL\xf4\x0b\xef\x8aY\xe7\x9a\xea\xd6\xb1]d\x1cW\x16\x96\xb5t\xe4\x9c\xcc\x17]\xbd\xc9\xad\xcd\x1d\xa7h\xa0\x85\xc0+^q4\xe8` H\x8eQ\xe8\x85jIe\x8d3\xb0\xf8\xa2\x83\x982!;\xab`\xd7\x00WAj\xf2\xb3&amp;\xb2k{k\x02\xd4\xce\x99\xbe\xb4g\xde\xb3el-L\x89\xc6+QREj\xbat\xed\x9a\xa2f\xacsP=\xca\xa92q5~\xfd\x01\xd4z\x92\xdaM\xccFH\x02Lf\xb8\xd5\xdc\xcdT&lt;{\xab&gt;J\x85 \x89\x9f\x9fj\xc8\xd6\xbb\x1e\x04\x7fIHw\x00\xc9[\xc7#y\x0c\xd0\'\x1b\x00\xe3\xf3\xe6\x83\xd5\xf5\x8b\xccM\xcbN.\x88\x90 \x86\x03\x9f\xa7\xfc\xab\xcd\xb4\xe5\x89\xfbSM%\xf6\xb6\xca\xca\xc4\x19\xe4sKl(~s\\\xd0\x8a\xdc\x08\xd7\xabu{\xa2\xd8ssv\xf0HY\x90=\xd5\x80\xe0\xe3\x8aOo\xc5\xb7$/\x96\x96\x81\xe5\x91rc\x8ei\xefS\xd4\x04F\xbfn\xda\x17\xbd\nLcww\xdb\xc4\x98\x1c\xfb\xd5f\xfe\xa1\xefsn\xd0\x85*r\x06}\xfe\xf4\xf5L\xae\xb9\x02\x0e\xc5+\x82%\xa7\xa7\\\xb1|\xdb\xd4]\xd39\xbc\xa61\x0be\xcc\x08f\x9c\x03\x9e+\x9e\x9d\xa1k\x9a\xad\xd7\xd6\xde\x94\\-\xe9\xdb\x00\x15\x1e\x9cpg\x99\xe3\x14\x9b\xc3\x1a\xc6D[\x17K\x1b\x05\x89d;H\xce\xe0H\'\x88&amp;c\xe2\xac=P\xa3\xe9mZR\xe7\x0cQ\x98Lz\xb6\x81\xbb\x923\xc0\xe2\xa3p\xc9\x12\x1a\xb29\x11\x7f\x8f&lt;L\x96\xf5\x1eN\xc2\xe8\x88\x10\x99\x1b\x1b\x00\x96X\xf9\xaa\x9e\x83\xaa\xd9\xdf\x96!s\x93\xed\xecj\xcf\xa9\xe86u\x17\x13Im\x80kVI\xbbuT\xb7\xf3\x0c@#\xe6x\x146\x83\xc0%\x01w\x1ej$\x16\xdb\xc9\x88\xc6\xd3\x14B\x89\xb7&amp;\x05,\xb1N\xd50n\x9d\xac7\xeeN\x9a\xd5\xc3\xb7\x04\x9f\xa4\x1f\x97\xe0\x08\xf7\xf7\xab6\xab\xa2\x9b\xdb]\xd5W\x8blU\x84\xf6?O\x1fo\xbdM\xe1\xddH\x16\x85\x8d"\xad\xa4\xde\xe8\xf2\tR\xe4n\rs\x07\xda\x07\xb6)\xc6\x87T,\x0f\'P\xb6\xee\xa0r\xcdqr\x8a\xcefN\xe3&gt;\x93\x89\x1f\x145U\x07\xdb\xd4;=\x84a\xbb\x82\xf4\xfb\tkN\xd6\xd5\x01 \x95B\xf9i\xf7*\x05*W[H\xcc\x97\x14_\x0cI\x95 \x0c\xe0(&lt;\xd3\xeb\x1bn\x91p]\xb6\x0f\xa9@[l?\x10\nv\x1c\xccO\xaaj\xbd\xd7\xad\xa0\xd4\xaa!t\xbc=,Uen\x01\x1e\xa2\x1b\x83\xcej\x19y\xcc\x85\x038\x8d\xba\xff\x00Rv\xb4\x18 \x0e\xc3\x90\xaa\n\x11\x1b\x9d\xcf\xb1\x9a\xef\xc2\xfac\xa8\xfed({8K\xa8\xe4\xa3n\xcb\x03k\xb7\xbf\xde\x95_\xe9\xd7\xae\xdb\xbc\xe4\\\x16\x90(\x12w;\xec\xc9*\xa3\xb1\xe3&gt;\xd4\xc4\xdb6\x7f\x87@@Vkw\x82[\xdf\x84$N\xf0r \x99\x93\xecqV\x0cG-\x07a@6\xe6w\xd5\xf4\x82\xf3\xad\xf0\xd7\x0bi\xd5\xf7\xdd\x18HY\x80W\xb1\x15\\\xeb\xda\x9b\x8e\xab\xba\xea\xca\x99$\x00KbC(\xa2\xfcA\xab\xf2,].\xa8\xcb\xbd\xd6\xdc]\xb8\x017\x0bAt\x02\x18\x85\x13\xcd+\xe9]6\xe2\xda\xb7u\xd1\xb7oP\xa2$\x81\x18\x9f\x8a\xa9`\xcb\x99z\x8a\x1e\x8c\x9bO\xa9{\x89r\xe3\xa4"\xc0bq\x06 `\xe7\xde\x87\xd02\xf9\x8a\n\xb4L\x90\xa2}1\xd8\nj\xbdB\xf3]t\xba\x8ag\xea\xdb\x02\x02\xf7s\xed\x91\x9a/K\xd2|\x97k\xb6u%\x15\x80\r\xbd\x04\x82L\x80H\xe4fd\n\\*\xe6:\xb7\x94\\H\xae\xf5K\xb6m5\xc4\x07r\x88E\xdb\xc4d\x93\xf0)\r\xee\xbcu\x16\xce\xf7\x01\xe7s\x08\'q&lt;\x9f\xfa~\xd4\xc7Y\xabwVK\xae\xae%\xa7\xb3\x12\x0eI\x1c\x85\xc2\xf3\xefP^\xd3i\x02nD*LbdddA\xcdM[\x10\x10e\xc8;\x83\x11\'\xf0\xdf\x89\x8a9F\x07g\xc6c\xe6\xaf\xdd7^.,\x8f\xd3\xfa\x1a\xf3\xce\x85a\x9f\xcc\x16\xed\x12\xac$\xf1;W8\'\xfaU\xb3\xc3Z\x87w\x86\xdd\xb4/\xa3p\xed\xed\x8e\xf5t\xb7\r\x8f\x11mn\x99Y\x0b\x0e\xc7\xefR\xc4\x01&amp;\x8b\xd3iI\xe2\x87\xde\x01\x8e\xf4\xe3L\x84(&gt;\xf4Sp\xdd\xb5f\x19\x1cH\x97NEH\xaf\x1d\xa8\x91\xc5p\x05I\xd4\x95&lt;\xc1\xed\x06un\xe4\xd4\xa1\xe8p\xbe\xdcT\xa9\x9ar\xbb7\x0c\x88"1&amp;\x0f[\xdd\\(\xae\xf6\xd1\x81\x95\x9b\xddX\x18W\x11XEZt\xdbEs\xb4V\xc0\xad\xcdt\x885\xe6\xa1\x0b\xd1\x17\x9b\x14\x1cP\x1c\xe2\x10\x0e Z\xfe+\xcd\xbcE\xa5t\xd49*|\xbb\xc0Cf\x03\t\x9a\xf5\xc1a{\xe4\xd5o\xc76\xad\\\xd3\xb2\xb4\x06\x19O\xb8\xff\x00:\xcf\xb9\x94\xc7\xb4\x8eU\xc4\xf1{\xaaQ\xb0Eu\xfcA1\'\xed\xff\x00\x9a\xe3R\xaa\x0c)$\x7f\xbc\n/\xa4t\x9f;n\xf76\xb7\x96TfQ\xb1\x99D\x91\xbaq\x8f\xea+\x82fm&gt;2\x0ci\xd2\xfa\x92\x9b\x17-=\xa9R=wy\xdb\'\xd2c\x80&gt;\xd9\xa1t\xcc\xb6.\x0b7\xa5\xed\xca\xe0\x800`\xee\x06$\x8c\xcc\xfc\x1a\\\xfd?Q\xb67\x05G\x0c\xdfT\x06\xf2\xf7\x03\xf2r\x08\x15\'I\xb1}\x88O0\x85O\xa6r\x01\xe4\x0c\xfd \xf1\xed\x9a\xb2\x80\x80\x9c\xceeV=~a\x1a\xad5\xcdM\xeb\xdeJ\x81n\xde\x0b\'\xd0\x10`g\xbf\x15m\xe9\xbd-\x87N\xf5\xb8&gt;Yr\x90}J$\x9c\xfeR\x7fJ_\xd34w-\x16]V\xa3\xc8\xb2\xe3y\xe2\x19\x8e6\xb1\xec+\xaf\n\xeb\x83\xe9\xba\x95\xb5T\xbam\xec\xb8\t\x90..\xed\xa4\x18\xf7U\xc7\xde\xa5I9\xc4^\xe6\x18\x1c\xc2:\x06\xabMeK)6\xfc\xc5\x0c\xae\xde\x93r\xe02TO\xd5&amp;#\xedR\xdd\xb7|\xed\xbff\xe7\x96\xb7\x01\x0e\x8f8h\xcb\x06\x18+\xf3\xf2h\x0f\x12\xe9R\xf0\xb2\r\xb5\xb3n\x08\x05\xd8\x86\xb7\x03\xe92@1\xed\xf0+\x1e\xf28k\t\xa8\x02\xd5\xa5\x16\xd7h\x92\xf2\xb1\xe9\x83\x9c\xf3Q\x91\x8c\x99]\x98a\x88\xc5&lt;G\xa7\xd3"\xdb#\x17\x11\x9e\xe0E\x01\xa4\xfd+$\xc4\xe6g\xd8N(\x1d5\xd1u\xbc\xbb\xd7\xde\xdd\xf9\x05V\xe5\xb0\xd6\xb6\xc1\xda\x19\xd6LA\x04\x93\xc4\xd7w\xafYD*\xaa\x1dB\xa9\xb7\xb8\x93\xea%w\x82`m\x10\x0e}\xc5A\xa8\xd0\xe9\x1d\xd7zj.\x9b\xccv\x9bm\xe8]\xed\x01wH\xe1fV?:\xe5ec8]Z\xe4\x06\xe66\xd4^\x1ak7\x81\xb4\xe9~\xcc\x97M\xc1\xad\xecs\x08\xca\xed\x04LH\x89\xc9\x8a3\xc2:\xa3\xa8Ar\xed\xbb&amp;\x14-\xbb\x85\x86\xff\x00T\x92\x87\'"\x01\xce~(\x7f\x1e\xe9,\xbe\xae\xd0\xf3\xed\x0b\xabm-\x8bN\x18\x97\xdb\xb8\x8fP\x10\xbd\xc0\'\xbf\xde\xab]\x1b\xc4b\xc9k;\x17\xf8{\xb7&amp;\xe5\x82\te\x04m\x94o~\x0e;\x83F+\x83\xc4\x18&amp;\xc4\xe3\xb9\xe8Z\xff\x00\x10\xa5\x81\xb1\x11[w\xa9\x0e \xc7\xa7\xd2G?s\x8c\x9a\xa8\xda\xbc\xee\xefq\x8c\xbd\xc69\xef\x18\x00\x0fa\xd8\x0f\xca\xa0\xb9\xa9\xb9sk9\x05\xa0\xa8\x88\x03n@\xe3\x13\x8c\x9e\xe6\x8b\xb0\xa1D[\x19\xeeO\xbf\xfe+/Qif\xc7\x89\x8d\xa8\xb0\x16\xc0\xeb\xfb\x8d_Mi\x11w\x8f1\xc1\xe3\xd0U\x0e$\x10O\xa9\xbd\xcc@\x10\'\x06\xa5\xd2XC\xba\xe3N\xc5\x86c#!\x7f\t\x13\xf0x\xf6\xa5\x9a{\x11$\xc4\x9c\x99\x1f\xac\x8e\xd4\xc6\xcd\xa4b\xb6\xddE\xc5b\xa0\xa9\x90 \x90$F\x01\x82c\xbduWc\x828\x8ci\xaf?\x0e8\x82u}\x05\x94s|5\xc4[\xc1\x14d\x1d\xaa\xde\x90.{)\x9cO\xb5\x03\xd5zA\xbc\\\xf9\x9b\x1a\xd9\n9!\x98\x8fN?\x0c\xc5_\x17\xa5Za\xc1{jO\xa0\x99\x04\x81\x0b%\x87\x0b\x98\x14\x93\xc5\x9d\x0c\x14\xb9\xe5\x82]\xc0\x01\x89"\x02\x03\x00\x00\xbf\x86\x04\x1e\xf9\xa6r\x8e~\xb3N\xab\xb0\xdbg\x97\xebu;\x9c\x17\x0c\x18\x08r\xc4\x12\xcc0O\xf6\xfc\xab\xad-\xf3q\xc2r\t\x18\xf9\xe0Q\x9d_\xa6j\r\x81`X\x7f41e!D\xb8PK\x9d\xc7.!\x84EA\xd2\xedyVQ\x16|\xdb\xa0\xbd\xc9\xe1P1\n\x0f\xb1\x85\x9f\xce\xae\xf5\x8d\xb9\x8f\xa5\xc5\xdc\'\x89\xe8=7MmQE\xc6 \xc0b\xa0\xf2\xa6\x00Os$\xc4U\xb3\xa7\xed\x1f\x80\x02DD~\x92~\x05y\xfd\xbb\xecJ\xba\xb4\x06KAI\x1fL\x1c\xe3\xbc\x11\xfb\x8a\xb7\xf4\xee\xa3\xbe\xe7\xab\x93\x03\x1e\xff\x00j\xca\xb5\xb6\x11\x88\xb6\xa6\xa6\xc6c\x9e\xa5\xa5,\x06\xdc\xb2\x8f\xc8\xe3\x89\xadh.\x92\xa2O\xebL\xac\x10q#\x1c\xfcPz\xed9R]F;\x81\xfdh\xac\x8c?\x90\x1f\xc4\xc9\xdc1\xb4\xc2\xb7\xd7&lt;\xc5\x0f\xa6\xbb4JQ\x03o\xc4\xa61;\xf8\x9a\x1d.\x90b\xa5\x1c\xfd\xea\x12\xb0\xd4\xdd\x0c\xd0M\x88z5H\x1a\xa3\xb61R\x01Z\xa0\xc0N\x81\xad\xc5pEj\xad:w\x15\x91\\\xcdouL\x88\xbd\x96\xa2\xe0\xd4\x85\xa8k\xcdJ\xd9\xc8\x85Y\xbdM\xe0\x013\x1f5\xe6Z\x9f\x1b\xda:\xaf\xe6Z[\x9ap\x19}BI"a\x95N \x91\x19\xecf\xac\x1e5\xeb\x06\xda\xad\x95#u\xc0\xdb\xbe\x169\xfe\xd5\xe4\xb6\xb4\xaaK3\xeel\xfa{\x7f\xe6\xb3\xab\n\x0e\xf6\xfcM\x1at\xee\xcb\x91.\r\xaeO\xe1\x94\xb2 ,X\x80\x00!Gd\x1e\xd0\x0f\xedJ\xf5w\x15\xf4\xf7\x00\x0b\xfc\x97K\xa4@\xff\x00\xe3\xb8&lt;\xb71\xf0v\xd2}v\xb4l\xd9\xb9\xa6C,px\x1e\xa1\xdb\xee=\xa8K/\xea2\xc6\x19J\xb0\x04\xac\x83\x061\xc8\x90\x0cq\x8a\xbdu\xe0\xee3T\x0fn\xd1\x1d\xf4\xfd\x08\xb7\xb3\xf8\x8d\xc2\xdb\xbal\x11\xeakwgs|\x02\x005p\xd7t\x1dE\xb1pim%\xdd\x8c\x00\x0c\xc2XG3\xc7q\x82h&gt;\x9f\xe2\x8dBi\xc6\xcbvn\x9f\\\x10\x006\xd7\xd0\x10@\xc1\x1f\x138\xe6\x87\xd4\xf5\x9b\xd7,0f\xd9\xb5\xe5\xb6\x16\x0c\xca\xc26\xc6\x062g\xe0U\xdf\x04\xf5\xc4\x0e\xdbO\x19\xc7\x89\x05\xab\xf7m_\xb6\xebw\xcdWU\x17\xf4\xe6\xd6\xe3\xb6=j\x06C\x80f\x18\x1cU\xa3\xa4\x7f\x05\xa6WKe\x14]\x93\x86\x96\x07\x95^2\x07\xcdV\xad\xea\xf46\xc5\x9b\xd6|\xd6tf\xdc\xac\xac0\xc0\x8d\xbb\x80\x82fH\x1f\xf5S.\x8el\xde\xb8H\xd3\xbf\x95y\x05\xb4qi\x8e\xd7\x92e\x9e\x0e\xd1\xbb\x110f\xa4\xe7\xe1X2\x8b\x8d\xc6\x07\xd5\xfa\x88\x93l\xdb\x04j\x01*\xee\xc0\xa8~\xcc\x01\x1e\x91&gt;\xd5/K\xd3\xda6\xd3\xf9V\xc5\xc5E\x04\x84\xde\xb8\xed\xbc\x82\xa5\xb1\x98\xae\xb5\xbd=\xce\xa0\x9dR\x13\xa7m\xae\xaa6\x84\x01v\x86\x1b\xe4m`;w\x93\x13\x06\x1c\xe9\xddt\xf6\xdd-!\xb7\xb8\xed\xf4\x90IX\x8d\xf3\x10\x84\xe7\x03\xeesTp\x02s\x03\xa9e\xdb\xde&gt;\xa2)6Z!\xb6\x9e\x7f\n\x08\x13\x8e \x03\x02\x97\xdc\xd2\x90}*}\xcfo\xb6A\xa3\xc5\x80\x0e\xe9fc\x82\xccc\x03\x18U\x00\x01\x1f\x15\xb3n\x07&gt;\xf9\xed\xd8w\xfc\xb9\xf6\xa4\xf6\x80f\x15\x8c\xa0\xe4\x12ewW\xa2,C\x15\x05\xc1\x10\xed;\xbb\xc2\xcc\xe4}\xfd\x86h]\x07O\xb6\x89x\xb5\xb6k\xea7\x06- !0N\xc1\xdcO\'\x9a\xb4\xd9\xd3\x02\xc1\x9c\xc2\t\xde\xdc\x00\xa0nbg\x8e?z\x07\xc3=8\xb6\xa1\xef`\xa2\xab(*I\xdd\xe6\x19\x08\t\x8e\x14,\xe3\xfa\xd3U\x97 \x82x\x8c\xd1c\x84\'&lt;\x08\xaf\xa7k\xd0\xa0h\x01\x17\xd2\x06\xf0\x1e\x0egd{\xcdZ\xd6\xda\x80X0\x01 \xee?I\x90\x08\xda\x7f\x11 \x8c\x0c\xf3I\xaet\x0bA\x8eYr@dPF\x0ea\x0fr\x08\x9e\xe3\xde\x98[\xd3C.\xc7P\xa5v\xddH\xda\x19O1\x06\x15\xb38\xe3\xde\x81j\xd6H\xf1\x0c\x06\x99\xc0\xe7\x061:\xf4{h\xbeS-\xc6\x9f\xe6\x0bnF\xc9\x816\xc1\x11$0\xc0\xed1\x9aq\xa8\xb3xZ.\x16\xdd\xc0\xc6ed0&lt;\xa7\xa7\xb1\x88\xfdiGGCf\xf5\xb5\xb5\xe6M\xe2g`\xdc\x96\x82\xbe\xf6Y\xdcq\xb6\x00\xdd\xc9&amp;;\xd7]\x1e\xe6\xa5\xf7\xdf`\xd6\x89&amp;\xe8\x8b\x8aU\xdd\xce\xdf,\x92v)\x00\x05\x82\'\x1d\xa2\x8e\x94\xab/1\xb5\xd8\xa3\xd9\xd7\xf7,}.\xfb\xb5\xb4h;\x17pr\xc4N\xe2\xc3\x8f\xf1@&lt;\xf7\x83L\x83F\xe2\x01\xf4\xca\x8fTz\xfb\xf1U_\x12\xf5\x9d`B\xabom\xb6\xd8\xa7ly\xaa\xf3\xf8\x000Ia\x03\xb7\xeb\x15?W\xeb*\x1by"\xd3\xed)r\xde\xe1\xbd\x9bm\xb2=9\xdd\x00\xb2\xc9\x8c\x80D\xcdT\xd0\x00\xca\xf6$lfo\xbcc\xd4-\x8b\x96\xc8\xb8a\xf7(\x07s,/p\x08\xc8\x98\xfc\xea\xa3\x7f\xc3\xc8/\xb6\xa1\xac\xbe\xce\xf6\xb8F[c \xb0\x988\x04\x0e\x0ef\xa7\xbf\xa9\xd6\xdacq\xac\xb2\x89\n\x90 \xb11\xb6H&amp;2c8\x9cT}CQ\xa8\xba\xc2\xd3\xdd\xf4\x04Qwi\x95\x12X1d\x07\xea\x9c}\xe2\xa6\xb2\xca6\xb7&amp;:\x94\xb0\xe8\x8c}\xe1v\xeeioY\xb4m\x83op\x05-\xbbm,W\xe9,\xe4\x19\x04pO\xb5\x17\xd0z\x85\x90\xd7wH\xbb\xb8\xaa\xe2J\x88\xcf\xa7\xb1\xdd#\xed\x15N\xf1\x07UW\xb4\xcb\xea\'\xcc\x02\xdb\x95\xda\xa6\xcd\xb2\xc1U@\xfaH\x07\xf6&amp;{Q\x1d\x03V\x14\xc82Xz\x8bd\xcf\xe7\x93\xc5/\xaa\xe3\xdc!E\x04\xd6A3\xd3\xbaq\xc6\xe9n\xd23\x99\xa6\xda{\xc1\xb8\xe4r*\x83\xff\x006f\xfa\x9b\xf4\'\xec"\x98\xf4\xae\xa7\xb5\xe6q\x11\xf7\x9aJ\x9dP\xa9\x82\xe3\x8f1\x1bt\x8cA&gt;e\x87SgcH\xe0\x9f\xd0\xd1z{]\xcf\xe9J,u\r\xed\xfaSK7i\x9ao\xac\xb6GQ\'F\x1c\x18j-m\xc5B\xb7\xab\xa0\xf5\xa0.B=\xb1r\x0c\xe1\x81S\xf1]\xa5\xca\xed\xd6E@\x059K\x13\xc4\xa1\x84\x82+`T+]\xabS\x00\xca\xce\x8a\xd6m\xad\x86\xad\xd5\xa7@\x8d\x95\xa0u;EN\xf7)f\xb6\xe79\xac;uD\x8cFQ\'\x96\xff\x00\xc4\x1bw\x85\xe3peN1\xdb\x8c\x11U\xad\x1d\xb7\xb8\xa0\x9fH\x13\x0cO~p+\xd1:\xd7\xad\xd5UCg!\xb8\xda9\xdd\xf1\xc5V\xba\xb16n(P\xbe\x9c\x85"TOm\xbd\xc6huZ\x08\x0b=\x16\x90\xee\x00\x1f\x12\xc7\xe0\xfd.\x95\xb4\x8e\x96Q\x0e\xa2\x00\xb8n(v\x93\xc1\xf8NGj\xad\xf8\xbf\xa4Z\xb0\xd6\x96\xc2-\xc7\x02\xed\xc6e\x88&gt;\xac\x06\x04\xe7n\x7f(\xadZ\xb2\x19\x1d\xee\xab\xda`\xe8\x97\x05\xb2QE\xb1\x05\x81E2O\'\x13\x15&gt;\x97\xa7\xa6\xa1]\xb4\xe6\xdd\xa0&gt;\x8bJ\xac\\\xa8$I\xdd\xef\xfe!#&amp;\x9b\xf9\x19M\x9b\\\xf3\xc4\xae\xf8Pn\xb8U\xd0\xb0`\xc4C\x00}&lt;\xc08\'?\xb5:\xe9:;L\xa1\x95.0[\xa5\xeen\x02E\x94S\xb5\t\'\xb9\'5\xc7\x91\xfc!\xde\xf6n/ J\x98\x05\x87\x0c\xc7\xf1bq\xd8Vi&lt;Oy\xec]\xb4\xc2\xd8\xdc\xbc\xc7\xa8\x93\x13\xe9\xe0\xe0rx\x8f\xca\xa5\x8f\xcap\x0cq\xe6\x1b\xd0\xb5\xa8\xe9\xb0ZE+\xb9\x96\xe30\xc2\xb3n2$I\x03h\xfd\xfbU\x8e\xc7[\x1a\x1b~E\xa7\x0e\\\xeep\x16\xda\xec\x1be\x90*\x91\x0c\xde\xecdO\r\x8a\xach\xf4\xb6\xfc\x9f\xe2\x07\xae\xdd\x91)#\xcb\xfe` \xc3\x10\x08v\xf3\x0e2q=\x85\x1d\xad\xd3\xaf\xf0\xe9qn\xdb+n.\x16g\x9b\x8f{R\xc7x\xf4\x10S\xdeH\xfc\x1d\x805\xca\xc7\xa9KV\xb6a\x9e\xb3\xff\x00p\xbe\x9a\xebx^\xbc\xa5\xe2\xd8\x86(\x0b^`\xe0\xc1\xd9#\xf9j\x04A\x93\x1d\xa6\xb7\xa6\xd9\x83m\xad\x81\x03\xcb\xc9&amp;\x00Pv\xa5\xcc!\x13\x07h\x8f\x9a_\xa3\xe9\xa6\x16\xe8&amp;\xd9\xb9b\xe3ZKj\xcb\xfc\xb0J^"\xe4\xeec\x000\x07\xb3\x80$\x0c(\xb3\xaa\xb4\x10&amp;\xf0\xe4\xa9\x1b|\xb6Y%N\xd4\x04I,K@\x80"9\xa8u\xc6\x04\x1d\x9au\xd4+`\xe3\xf7\xf7\x99h6\xa6K0\x80L\xb1"\x04A2b\x0cd\xd0\xdd\x07\xacX\xd4\xdc\xb8\xabr6\x98Ea\xf5[U\xdc\xf7\x86$\xe47\xb6\xd5\x03\xfcT\xcf\xa5j4\xf6\xae\x1bv\xd1R\xe5\xabH\xd7\xac\x82AbT;\xf9a\x89\x8d\xa0\xc9\x03\x8883U?\x05\xeb,i\x12\xee\xbc\xb6e\xedY\xb7\x89f\xb9\x1b}&lt;\x85T\xcb\x1f\x98\x02@\x15d\xa5H9\x98\x87I\x8c\x8c\xce\xbcW\xe2\xdb"\xd5\xcd%\x94pY\x905\xc2"m\x83\xb9\xa1X\x06\x92@\x02D\x10g\xe2\xac\x9d*\xc0\xb3\xa7\xf2\xad\x88!I;\x8a\x86\x92\x0b\xb1c\xc2\x80\x0f\xe5\x1e\xd5W\xd3\xe8\xcd\xfb\xc3V\xfb|\x8bl\xfb0\xa1\x89\x04}h\x04rdNx\xeej\xc2\xf7\x01GV\x04\x86\x1b\x0c\x9e\xd7\tV?\xa1\x8e\xc7\x15\x0e\xea\xa4(\x82\xd4)\xaf\xf8\xc7\xdc\xc3\xee\x80\x03\x1c\x05\xb8\xa2A\x02\x03A\x86\x1c\x83\xc0\x1f\xfej=\x1e\xaa\xc8\x1f\xce\xd9i\x84z\x88&gt;[\x03\x02I"m\x99\xecq\x90A=\x8av\xdbq\xb3\xe9\xe7\x9cmp\xa0\x88" 6g\xe2\x83\xd7\x0b(H\xba\x02\xab\x85V\x0eUF\xec\x8fPc\x05H\'\x8e \xe0\x83\xe9\x13w\xc70\x15.\xe2\x04#\xac\xeamY\xb66\xef-vE\xb7F\xfeXq\xb3\xd0YL\x89\xdd"\x08\x062EE\xd2\xad\xaa/\x90U\x92\xd5\xf5\x17$\xb1g\xf3\xad\xb3\x0b\x96\x88na\x94\x1e\xc7\xdc\xcei_\xfe\x9d\xd4mUu@=1\x05\xdd\xc9\'\xe9\x85\xdd\xbav\xc8\x00\xfe\x18\xcc\xd3Mm\xad\xf6.Y:\x8bw\xafZ\x82\xc0\x86\xda\x886)O0+.\xfd\xca\t\x1c\x8d\xc6}\xe8\xea\x87\x18\xc4\xdfJ\xebE\n\x0e`+h\xe9\xd4\xbd\xf5\xbd\xe6;\x12\xa5.[\x96V%\x96A3\xbcC\x199\x04\xf3]u\x8e\x85r\xfe\xb6\xdd\xf6\xb2v]\xd8\xd7-\x82\x1bj\x83\xb2n0m\xab\xb9v\x9c\x1e\xc4V\xad\xb5\xfb\x96\xd0\x0b\x88\xd6\xd4\xf9^\x8bN\xe8X\x91\xb6\x1fh\x82%\xa1\xc3\x03 \x03\xeeO:\x8d:\xa1\xb5p5\x9b\xb6\xd9\x02\x95\x17K\xed\x90O\x99\x99pKA\xe7\xeb\x06\x0fk\x0e80\xc5H\xe4A\x9b\xf8;w\x19\x8e\xa9\x8d\xa4&gt;\x9b67\x14V\x10}w\'\xd6\xdb\x84\xc0=\xc0\xfb\x87\xd1\xb4oq\xae\x19\xca\xb4\x98\xdc\x18\x82@\x9d\x9c\x95\xfb\x8eiu\x8bm\xfcR\x0f9\t-\xb2\xd8\xb6\xdb\xb6\x83*X\x820R\xde\xf8\x91$\xfc\x03N\x1b\xa2j-\xdc{\xb6\xed^{6\xc8%\x9bu\xb7\xda\x00m\xdbeK\r\xac\xc6T\x18\x04\xe3p\x80"\x0er#\n\xcbR\x95-\x82G\x98\x0e\xbb\xa7-\xcb\x17@\x0fo\xc9\xb8\x1a\xea\x84\xf5\xb4\xe1d\x9cJ\x92\xc7\x81\x031Ch\xb4\x9eR\\b\x97\x14\xc2\x19{N\xdbQ\x86[p\x10\xa4\x9e\xc4v\xf84\xe7Z\xebq\xae]7\n\xb5\x81$\xef&gt;e\xd4\x11n\t_\xa4\x96\r\x95\x91\xeb\x18\xa6:]r\xdd\xb2&lt;\xa9%P\x10\x97\n\x92\xce\x11\x9dl\x99\xc9Y\x07\xd5\x1d\xf0y\x88\xb0\x03\xc1\x91\xea:\x8f\xde"\x03m\xed\x05V\xb87&lt;l@\x19\x9bkpnv\xb7?\x9dsk\xae\xaa\xfaI\x829\xfe\xbc\x8aR\xda\x8b\xb7\x05\xcd\xd7\xb6\xdd\r\xb9\xd1P$\xba\x82\xa0\x91\x00\x91\xf8g=\xa6y\xa5\x84\xa90\x9b\x83\x98\x0b\xbb\xf1\x06\x80O\xb2\xe4\x9f\x88\xa5\xed\xd1\xd6\xc7\xa8\xcar0\xd3\xd1&lt;;\xd6\xc5\xc2\xdbL\xc4\x7fz\xb8i5R9\xfe\xd5\xe3&gt;\x16\xd5\xb2_`L\xc8\xe6}\x8e+\xd3\xbaf\xab\x15\x97}^\x8b\xe0u\x11\xd5T&lt;K0\xbbS\xdb\xbbJ\xac\xdc\x9a.\xd9\xaa\xa5\x879\x99\xac\xb1\xa2\xb5q\xe6d\x8a\x8a\xcd\xca\xe6e\x8f\xe5[\xbaKKb,\xeb\x0fQ[\xdbP\xda\x9a\x9cV\xaa\xc0\xcev\xd6T\xbbkQV\x91+:\xadT\nA\xd4u\xa7\x80\t&gt;\xc2\xaci\xd3\xc7\xe2$\xff\x00O\xd2\xbb\xb9\xa6@ \x00+\xca\x8d5\x8f\xcb\x1cM\x15\xb1W\xaeg\x94u\x1e\xaa\xf6^Ya\x8a\xe3\x9fs\x8a\xafj:\x91\xbbq\xd9\x89\r\x02?J\xf4\x0f\x1dh\xad\x8bLHc\x02Wls\xf9\xf6\xcdy\xd7H\xe9a\x8e\xf9 \xba\xb1I\x95\x1e\x9f\xa8\xe4\x1d\xdc\x18\x8fjv\x9a\xd0\x02~SSOh8\xc0\xfb\xc7\x07L\xff\x00\xc1\x8b\x8b\xa9W\xb7\xb8\xf9\xb6\xd1f\xed\xa0\xe4\x83\xbb\x13\xb7p\x13\xc0\xfb\xf1@iz\x82"\xba\xc9feT\x1bA\xc2\xc9,\x14\xb0\x10`\x01\xc7sA\xeb4\x97-\x1e\x14n\x0c\x0c02\x04H1\xcfl||S^\x9fg\xd3\xe5\xad\x9f\xe78\xdawO\xa81;\x8c6\x00\n\x14\xf6\xc8\x14\xcf\x062\xa1\x80%\x8egw\xefY\x0cU\xb7B\r\xc4\x92X\xbd\xc2\x06\x1b9\n\xa7\x9fq\x98\xa9,\xf4kmc\xcd2\x93#\xeb\xda\xad\x07\xbe\'\xbe\xd0\x17\xd4L\x99\x00W\x1dw\xa4^K\xb7Z\xd2;*4)\xc4z@\x0cB\x13\x90c\x04\x0f\x8a\x9bFuV\xfc\xd4\xbcF\xdb`\x16%\x83=\xb2A\nVN\xd5`\x14\x0f\x7fWr\x00\x1c\xc3\x8e \xc3\x828\x8d\xf4b\xd6\xcf\xe1]&lt;\x94;f\xd2[;\xb6\x90\xe6^\xe9RZ\xe3\x04\xc7|\x19a;@\xfa\xfd\x16\x9e\xd8\x06\xd5\x86r\xee\x19C+\xb0\x82=(m\x98\x0c\xd2\xff\x00\xf5@*$\x9356\x93\xad\xbb\xa8\xd33p\xa9\x0c\xe4*\xfa\x02\x10\xced\x988\xc0\x93$\x1c\xf6I\xab\xeaw|\xe0\x16\xfd\xc4\xb8\xaeT&gt;\xc1$,(\xb8\xc7\x97c\r#1\x88\x9a\x80\xec\xd2\x8bIS\xcf\x03\xe5\xe3\xe9\x05\xf1\x07Q\xd5j\x9a\xd0+\xbd\xb6\xaaZD@T(A;X\x13\xb4\x9f\xc4;FH\x18\xab6\x93\xa4i\xad\xbd\x8dE\xc0[s0\xd8\x15X@\x92\x8am\xd8\x12\x85H\xc8\x01\xbe\x931P\xf4w\xd3\xad\xd4\xd33]s\xaa*\x1a\xe1\xb7\xe5\xa0\x19]\x9b\x01\xdeU\x98\x13\x92\xaag2$\x18&lt;Q\xd7Q\xfc\xe5Te*n\xed`\xc7\x02\x00]\xa7\x1e^\xc7\x0b\xe8\x823 \x89\x92F\xf1\x17b\\\x95Q\x80%7\xfe"\xea&lt;\xce\xa7\xa9(\xc4\x8f3o=\xf6*\xb0\xc7i\x91\x1f\x11L&lt;)\xd4\x7f\xe5\xd7X\xdd\xb0.\xf9\x8b\n`n\xfbCL\x039\x1c\xf1\xf6\xa8\xbc/\xd0F\xa6\xe16\xd7r\xdb\xe4\xb1\xdaK\x10b;c\x9c\x8f\xd6\x9d/\x84\x9cj\n\xda\x04\xa6&lt;\xb3\xe6\x1fC\xb4m\xdf\xe9 \x12\xb2s\xf9\x91\x8a+0\xc6\xd8\xa2W\x83\x93;\xe9\x9aK-\xa5V\xd3\xf9\x8d\xabk\x9ek\xdbPR\xda\x84v!\x1d\xd8\x0b{\x15{\x82I\xfb\x08\x19\xac\xbdz\x15\r\xb2\xb7w\xaaB\xb24&gt;\xefN\xd2\x0e~\x95\x8f\xbepE5]=\xe3h[&lt;\xb2Ie&gt;P\xb6\xeaJ\xf9p\xc0\x08\xf51\xc9\x92\x7f*\xdfN\xf0\xf97\xaf\xeaA\xb6n\xdb]\x8a\x1b\xcbl\xb2\xa6\xdb\xa1\x8b\x00L\x02\x03O?\xa5\x01\xb0\xc7\x91&amp;\xcd:1\xcb@\xf4\xbdkSv\xe3o\xb2\xaav\xaa\x15 \xc25\xb2\xc6\xe1,8\xdcK\x00\xa7\xd9y\xa8\xee\xea\xae\x9b\xf6\x95\xb6\x90aBoi\x04n%\xc6\xc6\x9f\xa5\x98D\x89\xda\'\x11V\xe6\xd1_6\x94K\x19\x1b\x19\x9a\xda\xba\xb5\xb7@Y\x9d\x84s;g\x1fK\x1e\rV\x13e\xab\xb2\xfao&amp;\xf5\xdb\xa6n\x96\x05\x10\x12Zm\xe0\x02D)\x95\x11\x83\x07\x15]\xbea\xa9\xa6\xa5m\xc0u\x1c\xf8o\xae\xdcSe\x8d\xa4\xb7d\xcf\x90\xc6\xe4\xbbZ\x07i\xda\x83,\xaa\x18\x81#\x05\x8c\x1f|\xd0[6\xac\xb5\xb3}6^\x9f\xfe9Q/mD\xf1\xbf*P\x88`\xdcs&amp;c\xd1u\xbb\xc3m\xbb\xb7t\xe6\xc2\xe3sZ\x16\xd5\xfdP\xf9\x00\x82B\xb37\xa0,\x98&lt;\x13P\xf5\r5\xb6r,\xb0}\xdeg\x96\x97\x08U\x17\x00\xda\x1a\x1fi\xb8\n\xc9\x9c\x83\x0bRK\x0f\x80\xc2\xed\x04\xfb\xc6&gt;\xd0\xdf\x03\xdf\xb1i\xaei\xe0\xdb\xb8J\xce\xe7f\x10\x84\x95\x16\xd5\x86c\xd7\xea\xc6I\xec"\x89\xeb\x9e\x17\xbcw\xdfM^\xe2\xd2\xc4\x90D\xa9X\x04m$\x88\xf4\x91\x1d\xa3\x99\xc6\xb46\x0e\x9a\xd7\x98Y\x14m\x16\xd11\xea\xbb\x02\\\xdc\x11\xeb \x18\x03\xe4\x9f\x83.\x0b\x97,\x92.\x05\x03%c\xd2rO\x00O\xd4\xa3\xf4&gt;\xf4\x0b,8\xc7\x99^U\xf7\xa9\xc0\xeaR\xfa%\x94\xd2]W\xd4z\x93\xcb\xbbl\xa0h\x03x\nJ\xb2\x99\xc8\xde0\'\xed\x98\xb2\xf5\xbf\x1dY\xbd\xa3{\x16\x1e\xe2\xdd\x10\xa27f\xda\x95\xdd7 m\x95\x91?z_\xe2\x1e\x93\xe6\xad\xb0\xa2N\xf0\x0f\x01\xa3i\x92O\x1d\xc1\xc4{\x99\x8a\xad\xf5\xde\x8dv\xc6\tP\x19\x8a\xedX\x80\xa66\xb1n\xe0\x8e\xfe\xe2\xafU\xed\x8cGET\xde\xc1\x98\xfb\xa3^\x8fr\xd2\xf9\x96\xd9\xed\xdc\x07hWV\x90\xa1A\xdc\xa08\x9832\xb1\xc68\xaa\xfbj\xf6\x1b\xa8\x1b\xd2\x1aF\xd2\x0c:N\xc2\t\xe0d\xf1\xc845\xabFJ\xc8\xef$w\xfc\xfe\xd1R\xeb\xf5[\xf6\xb1P|\xb0\x14\x91#\xd0\xb0\x15YDFI3\xdfq\xf6\xa8\xed\xb9\x8e5[y\xef=\xc0/\xder\xc6\xe92\xc4\xef-\xff\x00\xd8\x99\xdc\x07\x13Pu\rc;\x97&lt;\xb6p \x0cD\x01\xec8\x14N\x81m\xb5\xdbip\xc5\xb6p\x1aZ1=\xcf\xe7\xcfj;I\xe1\xdb\xd7\xef7\x93i\x8a\x02v\x16\xc0\xdb8b{\xce\r\x17p\x1d\xc5\xad\xb0\'2\x1e\x8e\n\x0c\xe0\x93&amp;\xaf\x9d\x1b]1?z\xde\x93\xfe\x18\xde"^\xfa\xa9\xf6\x08O\xef\xb8M\x1dg\xc0\x97\xed\xe3\xcdF\xfc\x8e\x7fz\xcd\xd5Vl\xf7\x08\x89\xd4V\xd9\x04\xc7\xda\x1b\x921F[zFm]\xd3.\xe7\xca\x8e~&gt;O\xc5\x0fs\xc4\xa9\xdb\'\xb0\x19\x9f\xf2\xa4\x02\x11\xc1\x11f\\\x9c\x89l:\xb5E\xdcH\x00Q\x1d0\xee\x1b\xbd\xf3U\x1e\x9b\xa5\xb9~\xe7\x98\xe3\x03\xe9^\xc0\x7f\x9d]\xf4\x96\xb6\x80+o\xfc}m\xd9\xea%~\x07\x10\xa5J\xdcWK[+[1i\xc85\xb9\xad\x11Z\xae\x9d\x15;\x8a\x13YyB\xf3\xdf4%\xfdU\'\xea\x1a\xdf\x9a\xf2\xad\xaa\xf0#\xe9^b\xff\x00\x11k\x13kn\x98\x83\xc1\x13\xfb\xd7\x9fju\xbe\xab$\x18)\xb5G`\xa8\x0c\xa8Q\xcfrI\xef4\xff\x00\xaej\xd4\x82\x1c\x90\x0c\xc9X$c\xb0\xfb\xc7\xe9U=&amp;\x88\xdd\xdd\xbaTF\t\xe0\xb1\x80\x014\xde\x90\x122f\xae\x9c*\xa9\x96\xed=\x8f\xf9\x86\xa9t\xf6\x1a\xce\x99v;\x97Kdy\x9bHR"\x14\xb4\x02\x06\xd0\xc4\r\xa6\x81\xbb\xa0\xb9n\xee\xa3H\xd0\xf7U\x80\x0c&lt;\xc5\rlAr\x08\x90\x06P\xe4`\x8eN&amp;\xc5\xff\x00\nm[[osP\xab\xff\x00\xb7\xbc|\x8b\x8c@\xd8\xd7\x10\xdb\xba\xa9\x9e\xfbT\xfbz\x89\xe74O\x8b:\xfe\x95\xae=\xbbGqwR\xccT\xed\x01QP\x85n\xf8\xcf\xa6g\x83\x00V\x8b\xed\x03\xeb\x07M\x96\xfa\xa5\x00\xe3\xf7\x98\x07L\xe8ov\xd1\xbfoV\xd2\xa0\xc32\x82Y\xc2\xa1U\x8e\xca\x00\x82@$\xcc\xfd\x90x\x82\xe5\xa6\xb4L\xff\x009\x8a\x80\x00 \x1f\xc4\xe4\xbf\xe2\x98Y\x06}B{\xd3=\'Sp\xbf\xc2\xc1)u\x8f\xaaJ\xdcDh$9\x8fN\xe1\xb6;\x81\x1f\x14\x9fC\xac[N\xae\xe1\xed\xba\xa9T\xe4mvP \x82\xa6@\x82\x0e\'\x8f\x8a\x1cc\xd3`I?\x8f\xb4Fu\xd77\x15B\xe4\xca\xb7\x03pe\x03\xb8\xce\x08\xfb`\x1a\xb9\xf4!gQh5\xef\xaeU\x9egqf\x98\x00D\x05*A\xc0\xe4\x93Iu\xdag\xd4\x12\x03[,\xd7\x18\xca\xe1L\xc6\x03\x18\xf6\xc9&gt;\xe4P\xfd&amp;\xfd\xef3\xf1\x00\xa4\xeeky3\n\xaa\n\x86\x12\x00\xb7\x10\x0f\xb9\xf9\xae\xc0"C3\x1e\t\x97\x1e\x9b\xa7\xba\xb7qi\xd0[\x04\x8f1T\x80@&gt;\xb5x\xdd\x1c@\x8c\xc0\x8e"\x8f\xebm\xa6[Z\x95\xbcH\xb4\xe8\xabn\xe7\x96n5\xa2\xe8\xdbK\x83\xeb\x9d\xcc\xbfI\xec\xa0\xc0&amp;\x85\xb5\xd6\xde\xd2\xb9\xb4\x9b\xee0fr\xce~\x80\x14\xab\x81\xbb\xd3%\xf2\x14\x7fJ\x97U\xaf\xb3yM\xbde\xb0\xa1\xd4\x95\xbe\x80\x02\x16\x01\xddr\xd00D,\xe0\x93\x11\x8c\xd5\x07\x0e"\xf6#\x11\xcf_N\xe5kEli-5\xa4&gt;j];\xfc\xeb\x05\x8b)R3\xb5\x84\xa4\x00=\'2O\xc5Z\xba\'R&gt;[[{\xe9wm\xcbl\\\x1d\xb3j\xf8Qm\xc89,\xb71\x18\xe4q\xc5V.t\x9b\x89\xa8e\x06Z\xd2o\xfe!7-\xbb\x927\x89S\xf5\x06]\xa0\x85\x933\x83\x06\x98\xf5_\x0b\x9bWX\x8b\xdb\x92\xfa0Y,\x83%J\x8b\x8c\'\xcc\x02\x04{\xed8\xc5\x15\xbefS\n\xc0\x00c\xde\xbb\xa3E\xb9hz\x85\xfb\x8d\x17Ym\x92\xbb|\xb2\x1a\xe0P\n\x86/\xb4\xc4\x92\t1"hm.\x89\xf4C\xcfa\xa7\xb8\x04\x04\x97\x8fF\xe5+\x0eD!\xda\x826\xcc\x9ag\xd0\xfay\x08\x0e\xa1\xcf\x9aL\x80\xd8am\x0c\x93\xb2bLLd\t\xeeE3\xea=&gt;\xc5\xc4\x00\x8d\xa8\x9e]\xc4\xb9m@\xce@\x1eY\x9c\xc1\x04c\xbfn(d\x1e\xcc\x1e\xf0\xbe\xce\xc7\x99N\xb7\xe2\x06{\xae,\x96k\x97T\xb8M\xeb\xb5\xd8\xfa\x8a\xb1\xc6\xc7\x01@\x1c\xe2\x01#\xb0\x1dKG\xb3K~\xdaC%\xdb\x88\xcc]\xf2\x8c\xa2O\xa6\x0cz\xb7\x120\xc715m\xd0t;+\xa8\x0eZ\xdf\xaeHV\x80w\x1d\xcc\x9bP\x89\xdc\x02\x12"1\xf6\xae\xec\xba\xa5\xcf\xe7\xdb\xb2\xc4\xc1B\t\xfa%\x97\xcci\xc3\x81\x1c\x91\xdc\x9e\xd5\t\x9cdB5\xb5\x8e\x87\xcaU\xaet\xefM\xbb\x1b\xfc\xd2%\xcb29\x12\xb9{R\x84\xc30\xef\xccm\xf7\x02\x9ci\xf4\xee\xabr\xfb\x7f2\xcd\xdf/e\xa8(\xc5\xf6\xc5\xc2\x8d\x83;T\xb6\xe1\xf5\x12&gt;d\x9d\x17\xf3\xd8\xda{f\xc7\xd1q\x02:\x94\x89\xdc\n0\xcc\xf2{D\x08\x89\xa2:\xee\x9d\xee\x7f\x0fl\xb8\xda\x8b\xea\xdd\x0ew\x96\x01K\x12\x01\x920O\x7fT\xd0\xcd\xa1s\x99;\xf7\x90\xb9\x8b\xad\xbb\xbd\xcd\x89\xb7\xcaP@\x17\x12@\x19RNd\x98\x10L\xcb\x19\xc5X\xfa~\x8c\x8bme\xcc\xc7\xa7\x0cLGi\xc9\x032?\xb5+\xd3\xeb\n\xc97\x18\xee#\x90\x92`\xc0\x93\xb7\x19\x9f\xb4\xd3at,\xb8\x1992s\x1c\xc1\xec3?\xad \xda\x81\x9f\xeeE\xaa\xdc\x001\xf2\x816\x91\x11\xd1O\xd2\x1a{\x1f\xf1\x02@\xf7\xff\x00N\xe0P\xfdSEj\xea\xbd\xb3\xeb;cp\x18\xda!\x81\x12`f\x7f\\Q}9\x8b\xb31\xed\x81\xc6 I\xc9\xe3\x91\xfaT\xfdB\xc7\xa6U~\x0c\x11\x92L\xa9\x03\xe0\xc4|\x1a\xba\xd8\xdb\x01\x12\xb9\xda\xe0\x13\xcc\xf2n\xad\xd3\x7f\x82\xbe\xcbu|\xc4*v\x10`K\x00U\xa4{g\x8aG\xd4z\x88p\x00D@\xb3\x84\x9c\xee \x92\xc4\x92I\xc0\xfd\xfd\xeb\xd2\xbcu\xd3B\xe8\xdfw\xa8\x08*O\xd4\te\x02=\xc0\x01Fk\xc9\xban\x9c\xbd\xf4N\xcc\xd1\xfaO\xf9S\xf4\x9d\xcb\x93\xe2;\xfe\xc9#\x9f\xf9\xff\x00\xc9\xe8~\x04\xf0\xdd\xa3\xfc\xc7]\xe4\xc4\x13\xdb\x9e\xdcw\xaf^\xe9\xfaTU\x00\x00*\x8f\xe1\xab`\x10\xa0\xc0\xe6c\xb0\xf8\xab\xd6\x95\xb1ISq{\ti\x9b\xabc\x98dV\x14\x15\xc0\xb8+\xb0\xd4\xf0*b\x1c\xce.\xd8\x04A\x00\xf6\xcf\xb5y\xeaxeljY@\xf4N\xe4\xff\x00\xea{~D\x11\xfaW\xa4P\x9a\xfb!\x801\x90\x7f\xae?\xca\xa5\xaa\x0c\x04\x94\xb0\xac\x87Aa@\x00\n`\xabB\xe9\x96(\xe5\x14\xfdc\x8cA\x13\xcc\xd0\xae\xd4\xd7&amp;\xb2\x8b+6\xd5\xaa\xd85\xba\x99\xd3\xc5\xff\x00\xf5\x8d\x92=LW\xe0\x83K\xeex\x81o\x12\xb6\xa5\x88\xe7\x06\x05\'\xea=";S\xdf\x03\xf4\xdd\xa8\xfe\xec\xde\xd9 \x08\xe7\xdb\x9a\xf3\xcd\xa6\xac\x0c\xf9\x9aa\xf1\x14\xea\xfa{\xb0\xdeH\xc1\x18\xfe\x98\xa5\x9dN\xf3n\xf5\x83#\x8c\xf0\x0e}&gt;\xd9\xff\x00Z\xf4\xbb\xfa%\x8c\xc5T\xbcG\xd3\x94\x8d\xc0\x19^&gt;F1\x1d\xc5Z\xa6\xdb\x88\xc5\x17\xe0\xf3\xd1\x87\xf8[D\xc6\xde\xa3\x1b[\r$\tf(Tr"3\xdb\xdc\xc7\xc2+\xcb\x1e\x82\xbbB\xbb\x19\x92O\xa8*\xe7\xb1\x80\xbf\xff\x00F\x9ex7\xab\x9f4\xa5\xd2\xc42\x88\x04\x9e\x14\xe6\'\xe0\x9c\x0fj\xb3u^\x87\xa7\xb8\xbb\xc1\x10b\x07\xbfp9\xc4U\x1a\xc6\x0ec\xf5\\\x95\xb7=O&gt;\xb3\xaa{l\x19\x00,`G\x00\x810\x18\x7f\x8aB\xff\x00\xa5\x0f\xd5\xae\\w&gt;a\xfe`\x90T\x9e\xe5\x87\xe2l\xcf\xab\x07&amp;\xad/\xd1R\xdcn\x01A\x07k\x1c\x89\x10\x7fr;\xfe\xd9\xa0\xba\xee\x90j\x10-\x94\xfer\xaaG\xafl8\xfa\xd5\x07\xb1\x13\xc9\xe6\x98\xaa\xd0\xd8=K]p\'\xda%v\xf2:\xdbD\xb6\x84\xb1\r\x00\xb6\xe6\x0cd\xb9+\xc4@\x90G\xb4\x99\xa7^\x1c\xba\xae\x90\xee\x05\xb4;\x05\xb0\x80\xb1\xf3\x19w\xb5\xbfv\x85\xcb\x1e7\x18&lt;\xd2\r.\x8d\xb7\x1bL\xac\x8c\xf1\x98\xe1P\xcd\xc8n0\'\xe3\xb5Z\xba\xde\x8e\xc5\x8b\xafj\xde\xe4P;\x92\xf9a\xb9U{\x92}q\'\xf3\x8cQ\x9f\x8e\x07p\x18\xdc\xc0G64\xde}\xbb\x88\xcdj\xd8\xb6\xf2\x1c\x05\x05\x98\x16\xb7\xb5\xc8\x01\x7f\xf8\xc2\x1d\xcb\x89\x9f\xb5(\xf1\x05\xa5g\xf2U\x95\x18F\xd2\xe3\x10F\xe0\xe8D\xc6\x06\t\x99\x91\xde\xaa\xda\x8b\xcc.\x15;\xb6\xacz`\x8d\xd2\x00`G\xc91\xfe\xc5McMp\xb2\x97@\x14\x16\xf4\x86\xda\xc0\xc1\x01I\xe4go&gt;\xd9\xa1\xb2\xe7\x04\xcb\xadd\x1c)\xe3\xe5\x0f\xe9\x96/Z\x89\xbb\xe6[\x17\x14\x98$\xed.\xe01\x00\x8f\xa9\xb6\xb4A\xceN\'\'\xf5=D\\.\x9a\x82\\3\x97\xda\x08T&amp;\xe1xF1\x89-\xc7\xb1\xf7\xca\xdd~\xa4o0\x024\x99*&amp;ZI\x9c`\x18\xe3h\x88\x81\xf6\x1bS\xa8\x1b\x14*&gt;\xd2\x02\xee \xc1q\x05\xa21\xc9_\x98Q&lt;\xd5\x9b,!\xeb\xa9Q\xc11\xad\xff\x00\x13\xdc\xb8\x89m\xdc\xec\xb2=\x0c\xb2\x1c\x95R\x14\x98'... (set the log level to DEBUG or TRACE to see the full content) 
 </msg>
<msg timestamp="20200729 21:47:20.954" level="INFO">POST Response : url=http://ninjachef-api-qaninja-io.umbler.net/products 
 status=200, reason=OK 
 body={"_id":"5f22165efbba920016c6b824","user":"5f1744fc42f1f60016038846","thumbnail":"thumbnail-1596069469817","name":"Carne de Jaca Louca","plate":"Tipo","price":20,"__v":0,"thumbnail_url":"http://ninjachef-api-qaninja-io.umbler.net/files/thumbnail-1596069469817","id":"5f22165efbba920016c6b824"} 
 </msg>
<msg timestamp="20200729 21:47:20.954" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200729 21:47:20.347" endtime="20200729 21:47:20.954"></status>
</kw>
<kw name="Status Should Be" library="RequestsLibrary">
<doc>Fails if response status code is different than the expected.</doc>
<arguments>
<arg>200</arg>
<arg>${resp}</arg>
</arguments>
<status status="PASS" starttime="20200729 21:47:20.955" endtime="20200729 21:47:20.955"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${resp.json()['_id']}</arg>
</arguments>
<assign>
<var>${produto_id}</var>
</assign>
<msg timestamp="20200729 21:47:20.956" level="INFO">${produto_id} = 5f22165efbba920016c6b824</msg>
<status status="PASS" starttime="20200729 21:47:20.955" endtime="20200729 21:47:20.956"></status>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<arguments>
<arg>${produto_id}</arg>
</arguments>
<msg timestamp="20200729 21:47:20.957" level="INFO">${produto_id} = 5f22165efbba920016c6b824</msg>
<status status="PASS" starttime="20200729 21:47:20.956" endtime="20200729 21:47:20.957"></status>
</kw>
<kw name="Go To" library="SeleniumLibrary">
<doc>Navigates the current browser window to the provided ``url``.</doc>
<arguments>
<arg>${base_url}</arg>
</arguments>
<msg timestamp="20200729 21:47:20.957" level="INFO">Opening url 'http://ninjachef-qaninja-io.umbler.net/'</msg>
<status status="PASS" starttime="20200729 21:47:20.957" endtime="20200729 21:47:21.813"></status>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<arguments>
<arg>${CAMPO_EMAIL}</arg>
<arg>${email_cozinheiro}</arg>
</arguments>
<msg timestamp="20200729 21:47:21.814" level="INFO">Typing text 'eduguedes@gmail.com' into text field 'id:email'.</msg>
<status status="PASS" starttime="20200729 21:47:21.814" endtime="20200729 21:47:22.167"></status>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click the element identified by ``locator``.</doc>
<arguments>
<arg>${BOTAO_ENTRAR}</arg>
</arguments>
<msg timestamp="20200729 21:47:22.168" level="INFO">Clicking element 'css:button[type=submit]'.</msg>
<status status="PASS" starttime="20200729 21:47:22.168" endtime="20200729 21:47:22.255"></status>
</kw>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<arguments>
<arg>${DIV_DASH}</arg>
</arguments>
<status status="PASS" starttime="20200729 21:47:22.256" endtime="20200729 21:47:22.722"></status>
</kw>
<status status="PASS" starttime="20200729 21:47:20.331" endtime="20200729 21:47:22.722"></status>
</kw>
<kw name="Quando o cliente solicita o preparo desse prato" library="kws">
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
<arg>user_id=${token_cliente}</arg>
</arguments>
<assign>
<var>&amp;{headers}</var>
</assign>
<msg timestamp="20200729 21:47:22.726" level="INFO">&amp;{headers} = { Content-Type=application/json | user_id=5f1744fc42f1f60016038847 }</msg>
<status status="PASS" starttime="20200729 21:47:22.725" endtime="20200729 21:47:22.726"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>payment=Dinheiro</arg>
</arguments>
<assign>
<var>&amp;{payload}</var>
</assign>
<msg timestamp="20200729 21:47:22.727" level="INFO">&amp;{payload} = { payment=Dinheiro }</msg>
<status status="PASS" starttime="20200729 21:47:22.726" endtime="20200729 21:47:22.727"></status>
</kw>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>api</arg>
<arg>${api_url}</arg>
</arguments>
<msg timestamp="20200729 21:47:22.728" level="INFO">Creating Session using : alias=api, url=http://ninjachef-api-qaninja-io.umbler.net, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200729 21:47:22.727" endtime="20200729 21:47:22.729"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>api</arg>
<arg>/products/${produto_id}/orders</arg>
<arg>data=${payload}</arg>
<arg>headers=${headers}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20200729 21:47:23.385" level="INFO">POST Request : url=http://ninjachef-api-qaninja-io.umbler.net/products/5f22165efbba920016c6b824/orders 
 path_url=/products/5f22165efbba920016c6b824/orders 
 headers={'User-Agent': 'python-requests/2.24.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'user_id': '5f1744fc42f1f60016038847', 'Content-Length': '23'} 
 body={"payment": "Dinheiro"} 
 </msg>
<msg timestamp="20200729 21:47:23.385" level="INFO">POST Response : url=http://ninjachef-api-qaninja-io.umbler.net/products/5f22165efbba920016c6b824/orders 
 status=200, reason=OK 
 body={"_id":"5f221660fbba920016c6b825","user":{"_id":"5f1744fc42f1f60016038847","email":"fernando@bol.com.br","__v":0},"product":{"_id":"5f22165efbba920016c6b824","user":"5f1744fc42f1f60016038846","thumbnail":"thumbnail-1596069469817","name":"Carne de Jaca Louca","plate":"Tipo","price":20,"__v":0,"thumbnail_url":"http://ninjachef-api-qaninja-io.umbler.net/files/thumbnail-1596069469817","id":"5f22165efbba920016c6b824"},"payment":"Dinheiro","__v":0} 
 </msg>
<msg timestamp="20200729 21:47:23.386" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200729 21:47:22.729" endtime="20200729 21:47:23.386"></status>
</kw>
<kw name="Status Should Be" library="RequestsLibrary">
<doc>Fails if response status code is different than the expected.</doc>
<arguments>
<arg>200</arg>
<arg>${resp}</arg>
</arguments>
<status status="PASS" starttime="20200729 21:47:23.386" endtime="20200729 21:47:23.387"></status>
</kw>
<status status="PASS" starttime="20200729 21:47:22.724" endtime="20200729 21:47:23.387"></status>
</kw>
<kw name="Então devo receber uma notificação de pedido desse produto" library="kws">
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${email_cliente} está solicitando o preparo do seguinte prato: Carne de Jaca Louca.</arg>
</arguments>
<assign>
<var>${mensagem_esperada}</var>
</assign>
<msg timestamp="20200729 21:47:23.394" level="INFO">${mensagem_esperada} = fernando@bol.com.br está solicitando o preparo do seguinte prato: Carne de Jaca Louca.</msg>
<status status="PASS" starttime="20200729 21:47:23.393" endtime="20200729 21:47:23.395"></status>
</kw>
<kw name="Wait Until Page Contains" library="SeleniumLibrary">
<doc>Waits until ``text`` appears on the current page.</doc>
<arguments>
<arg>${mensagem_esperada}</arg>
<arg>5</arg>
</arguments>
<status status="PASS" starttime="20200729 21:47:23.396" endtime="20200729 21:47:23.535"></status>
</kw>
<status status="PASS" starttime="20200729 21:47:23.392" endtime="20200729 21:47:23.536"></status>
</kw>
<kw name="E posso aceitar ou rejeitar esse pedido" library="kws">
<kw name="Wait Until Page Contains" library="SeleniumLibrary">
<doc>Waits until ``text`` appears on the current page.</doc>
<arguments>
<arg>ACEITAR</arg>
<arg>5</arg>
</arguments>
<status status="PASS" starttime="20200729 21:47:23.539" endtime="20200729 21:47:23.576"></status>
</kw>
<kw name="Wait Until Page Contains" library="SeleniumLibrary">
<doc>Waits until ``text`` appears on the current page.</doc>
<arguments>
<arg>REJEITAR</arg>
<arg>5</arg>
</arguments>
<status status="PASS" starttime="20200729 21:47:23.576" endtime="20200729 21:47:23.605"></status>
</kw>
<status status="PASS" starttime="20200729 21:47:23.538" endtime="20200729 21:47:23.606"></status>
</kw>
<kw name="Close Browser" library="SeleniumLibrary" type="teardown">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20200729 21:47:23.608" endtime="20200729 21:47:27.255"></status>
</kw>
<status status="PASS" starttime="20200729 21:47:16.331" endtime="20200729 21:47:27.256" critical="yes"></status>
</test>
<doc>Receber Pedidos
Sendo um cozinheiro que possui produtos no dashboard
Quero receber solicitação de pedidos de preparo dos meus produtos
Para que eu possa envia-los aos meus clientes</doc>
<status status="PASS" starttime="20200729 21:47:15.752" endtime="20200729 21:47:27.258"></status>
</suite>
<statistics>
<total>
<stat pass="1" fail="0">Critical Tests</stat>
<stat pass="1" fail="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="1" fail="0" id="s1" name="Receber-Pedidos">Receber-Pedidos</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
